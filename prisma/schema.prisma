generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String  @id @default(uuid())
  email    String  @unique
  username String? @unique
  name     String?
  avatar   String?
  hash     String

  role      Role    @default(CUSTOMER)
  isBlocked Boolean @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  creditCards CreditCard[]

  bookedCars    Car[] @relation("BookedCars")
  savedCars     Car[] @relation("savedCars")
  publishedCars Car[] @relation("PublishedCars")

  contryId String?
  contry   Contry? @relation(fields: [contryId], references: [id])
}

model Contry {
  id String @id @default(uuid())

  name String @unique 
  code Int @unique
  tax  Int

  users User[]

  @@index([name])
}

model CreditCard {
  id     String @id @default(uuid())
  number String @unique
  name   String
  cvc    String
  expiry String

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Car {
  id               String   @id @default(uuid())
  brand            String   @unique
  description      String
  images           String[]
  availableStock   Int
  price            Int
  reductionPercent Int

  configuration Json?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  usersWhoBooked User[] @relation("BookedCars")
  usersWhoSaved  User[] @relation("savedCars")

  publisherId String?
  publisher   User?   @relation("PublishedCars", fields: [publisherId], references: [id], onDelete: SetNull)

  @@index([brand])
}

enum Role {
  CUSTOMER
  ADMIN
}
